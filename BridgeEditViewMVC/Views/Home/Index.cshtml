@using System.Reflection
@model object;

@{
    ViewData["Title"] = "Home Page";
    
}

    
@{
    Type myType = Model.GetType();
    IList<PropertyInfo> props = new List<PropertyInfo>(myType.GetProperties());
}

@using (Html.BeginForm("Save", "Home", FormMethod.Post)) {
     
    @Html.Hidden("typeName", myType.Name)

    @foreach (var prop in props)
    {
        <div class="mb-3">

        @switch (prop.PropertyType.Name)
        {
            case "String":
                @Html.Label(prop.Name, prop.Name)
                <br/>
                @Html.TextBox(prop.Name, prop.GetValue(Model))
                break;
            case "Int32":
                if (prop.Name.Equals("id", StringComparison.InvariantCultureIgnoreCase))
                {
                        @Html.Hidden(prop.Name, prop.GetValue(Model))
                }
                else
                {
                    @Html.Label(prop.Name, prop.Name)
                    <br/>
                    @Html.TextBox(prop.Name, prop.GetValue(Model), new {type="number"})
                }
                break;
            default:
                break;
        }
        </div>
    }
    
    <button type="submit">Save</button>
}

